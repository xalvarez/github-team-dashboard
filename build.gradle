plugins {
    id "org.jetbrains.kotlin.jvm" version "$kotlinVersion"
    id "org.jetbrains.kotlin.kapt" version "$kotlinVersion"
    id "org.jetbrains.kotlin.plugin.allopen" version "$kotlinVersion"
    id "io.micronaut.application" version "1.3.3"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "org.sonarqube" version "3.1.1"
    id "jacoco"
}

repositories {
    mavenCentral()
    jcenter()
}

micronaut {
    runtime "netty"
    testRuntime "junit5"
    processing {
        incremental false
        annotations "com.github.xalvarez.githubteamdashboard.*"
    }
}

dependencies {
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut.kotlin:micronaut-kotlin-runtime"
    implementation "io.micronaut.views:micronaut-views-thymeleaf"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-validation"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"

    kapt platform("io.micronaut:micronaut-bom:$micronautVersion")
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"

    runtimeOnly "ch.qos.logback:logback-classic"
    runtimeOnly "com.fasterxml.jackson.module:jackson-module-kotlin"
    runtimeOnly "org.webjars:bootstrap:4.6.0"
    runtimeOnly "org.webjars:jquery:3.5.1"

    testImplementation enforcedPlatform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "com.github.tomakehurst:wiremock-jre8:2.27.2"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.mockito:mockito-junit-jupiter:3.7.7"

    kaptTest platform("io.micronaut:micronaut-bom:$micronautVersion")
    kaptTest "io.micronaut:micronaut-inject-java"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

application {
    mainClass.set("com.github.xalvarez.githubteamdashboard.ApplicationKt")
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
}

allOpen {
    annotation("io.micronaut.context.annotation.Prototype")
}

tasks {
    compileKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

project.tasks["sonarqube"].dependsOn "jacocoTestReport"

dockerfile {
    baseImage = "openjdk:14-alpine"
}

dockerBuild {
    images = [
            "docker.pkg.github.com/xalvarez/github-team-dashboard/github-team-dashboard:$project.version",
            "docker.pkg.github.com/xalvarez/github-team-dashboard/github-team-dashboard:latest"
    ]
}
