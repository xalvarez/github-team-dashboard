import static org.gradle.api.JavaVersion.VERSION_17

buildscript {
    ext {
        kotlinVersion = '1.6.10'
        micronautVersion = '3.2.3'
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "$kotlinVersion"
    id "org.jetbrains.kotlin.kapt" version "$kotlinVersion"
    id "org.jetbrains.kotlin.plugin.allopen" version "$kotlinVersion"
    id "io.micronaut.application" version "3.3.0"
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "io.gitlab.arturbosch.detekt" version "1.19.0"
}

repositories {
    mavenCentral()
}

micronaut {
    runtime "netty"
    testRuntime "junit5"
    processing {
        incremental true
        annotations "com.github.xalvarez.githubteamdashboard.*"
    }
}

dependencies {
    kapt "io.micronaut:micronaut-http-validation"
    implementation "io.micronaut.kotlin:micronaut-kotlin-runtime"
    implementation "io.micronaut.views:micronaut-views-thymeleaf"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-management"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"

    runtimeOnly "com.fasterxml.jackson.module:jackson-module-kotlin"
    runtimeOnly "org.webjars:bootstrap:5.1.3"

    testImplementation "com.github.tomakehurst:wiremock-jre8:2.32.0"
    testImplementation "io.mockk:mockk:1.12.3"
}

application {
    mainClass.set("com.github.xalvarez.githubteamdashboard.ApplicationKt")
}

java.sourceCompatibility(VERSION_17)

allOpen {
    annotation("io.micronaut.context.annotation.Prototype")
}

tasks {
    compileKotlin {
        kotlinOptions {
            jvmTarget = "17"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "17"
        }
    }
}

dockerfile {
    baseImage("eclipse-temurin:17.0.2_8-jre-alpine")
}

dockerBuild {
    images = [
            "ghcr.io/xalvarez/github-team-dashboard:$project.version"
    ]
}
